<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.seecoder.courselearning.mapperservice.test.ProblemMapper">
  <resultMap id="BaseResultMap" type="cn.seecoder.courselearning.po.test.Problem">
    <id column="pid" jdbcType="INTEGER" property="pid" />
    <result column="course_id" jdbcType="INTEGER" property="cid" />
    <result column="value" jdbcType="INTEGER" property="value" />
    <result column="analysis" jdbcType="VARCHAR" property="analysis" />
    <result column="des" jdbcType="VARCHAR" property="describe" />
    <result column="ans" jdbcType="VARCHAR" property="answer" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from problem
    where pid = #{pid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.seecoder.courselearning.po.test.Problem" useGeneratedKeys="true" keyProperty="pid">
    insert into problem (pid, course_id, value,
      analysis, des, ans)
    values (#{pid,jdbcType=INTEGER}, #{cid,jdbcType=INTEGER}, #{value,jdbcType=INTEGER},
      #{analysis,jdbcType=VARCHAR}, #{describe,jdbcType=VARCHAR}, #{answer,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="cn.seecoder.courselearning.po.test.Problem">
    update problem
    set course_id = #{cid,jdbcType=INTEGER},
      value = #{value,jdbcType=INTEGER},
      analysis = #{analysis,jdbcType=VARCHAR},
      des = #{describe,jdbcType=VARCHAR},
      ans = #{answer,jdbcType=VARCHAR}
    where pid = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select p.pid, p.course_id, p.value, p.analysis, p.des, p.ans
    from problem p
    where p.pid = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByCourseId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select p.pid, p.course_id, p.value, p.analysis, p.des, p.ans
    from problem p
    where p.course_id = #{couseId,jdbcType=INTEGER}
  </select>
  <select id="selectByTestId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select p.pid, p.course_id, p.value, p.analysis, p.des, p.ans
    from problem p
    left join select_problem s
    on p.pid = s.pid
    where tid = #{TestId,jdbcType=INTEGER}
  </select>
</mapper>